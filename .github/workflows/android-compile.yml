name: Create Android Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.1)'
        required: true
        default: '1.0.0'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  generate-port-o2r:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y gcc g++ git cmake ninja-build lsb-release

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2.18
      with:
        key: ${{ runner.os }}-o2r-ccache-${{ github.ref }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-o2r-ccache-${{ github.ref }}
          ${{ runner.os }}-o2r-ccache-

    - name: Cache build folders
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-o2r-build-${{ github.ref }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-o2r-build-${{ github.ref }}
          ${{ runner.os }}-o2r-build-
        path: |
          torch/cmake-build-release

    - name: Generate spaghetti.o2r
      run: |
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
        make -C torch type=release -j3
        torch/cmake-build-release/torch pack assets spaghetti.o2r o2r

    - uses: actions/upload-artifact@v4
      with:
        name: spaghetti.o2r
        path: spaghetti.o2r
        retention-days: 1

  build-android:
    needs: generate-port-o2r
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Install build tools
      run: sudo apt-get update && sudo apt-get install -y ninja-build

    - name: Download spaghetti.o2r
      uses: actions/download-artifact@v4
      with:
        name: spaghetti.o2r
        path: android/app/src/main/assets 

    - name: Configure Gradle permissions
      run: chmod +x android/gradlew

    - name: Update version in build.gradle
      run: |
        sed -i "s/versionName \".*\"/versionName \"${{ github.event.inputs.version }}\"/" android/app/build.gradle
        CURRENT_CODE=$(grep "versionCode" android/app/build.gradle | sed 's/.*versionCode \([0-9]*\).*/\1/')
        NEW_CODE=$((CURRENT_CODE + 1))
        sed -i "s/versionCode $CURRENT_CODE/versionCode $NEW_CODE/" android/app/build.gradle
        echo "Updated to version ${{ github.event.inputs.version }} with code $NEW_CODE"

    - name: Setup signing keystore
      run: |
        echo "$KEYSTORE_BASE64" | base64 -d > android/app/release.keystore
        test -f android/app/release.keystore || (echo "Failed to create keystore file" && exit 1)
        echo "Keystore file created successfully:"
        ls -la android/app/release.keystore
        file android/app/release.keystore
      env:
        KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}

    - name: Build Release APK
      run: |
        cd android/
        ./gradlew --no-daemon assembleRelease -P elfBuildType=Release
        mv app/build/outputs/apk/release/app-release.apk ../spaghettikart-release.apk
      env:
        KEYSTORE_FILE: release.keystore
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

    - name: Upload Release APK (artifact for next job)
      uses: actions/upload-artifact@v4
      with:
        name: spaghettikart-release-apk
        path: spaghettikart-release.apk
        retention-days: 1

  create-release:
    needs: build-android
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Download Release APK
      uses: actions/download-artifact@v4
      with:
        name: spaghettikart-release-apk
        path: .

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.event.inputs.version }}
        name: 🏎️ Spaghetti Kart v${{ github.event.inputs.version }}
        body: |
          ## 🏎️ Spaghetti Kart v${{ github.event.inputs.version }}
          
          ### 📱 Android Release
          
          **✨ Highlights:**
          - ⚡ Optimized release build with R8 code shrinking
          - 📦 Reduced APK size and improved performance
          - 🗂️ Enhanced file management with SAF integration
          
          ### 🛠️ Changes
          - 🧭 Improved folder selection with SAF (Storage Access Framework)
          - 🔁 Automatic mods syncing from user folder
          - 🧊 Better UI with rounded dialogs
          - 🔥 Torch app integration for easy mk64.o2r creation
          
          ### 📥 Installation
          1. ⬇️ Download the APK below
          2. 📲 Install on your Android device
          3. 🔓 Enable "Install from unknown sources" in Android settings
          4. 📁 Select a folder for your game files
          5. 💾 Add your mk64.o2r file (use Torch app to create from ROM)
          6. 🎮 Enjoy!

    - name: Upload Release APK
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./spaghettikart-release.apk
        asset_name: SpaghettiKart-v${{ github.event.inputs.version }}-release.apk
        asset_content_type: application/vnd.android.package-archive        
